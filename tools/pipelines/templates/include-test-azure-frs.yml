# Copyright (c) Microsoft Corporation and contributors. All rights reserved.
# Licensed under the MIT License.

# include-test-azure-frs

parameters:
- name: poolBuild
  type: object
  default: Lite

- name: testPackage
  type: string

- name: testWorkspace
  type: string

- name: timeoutInMinutes
  type: number
  default: 60

- name: target
  type: string

- name: env
  type: object
  default:

- name: splitTestVariants
  type: object
  default:
  - ""

jobs:
  - ${{ each variant in parameters.splitTestVariants }}:
    - job:
      displayName: Run ${{ variant }}
      pool: ${{ parameters.poolBuild }}
      timeoutInMinutes: ${{ parameters.timeoutInMinutes }}
      variables:
      # We use 'chalk' to colorize output, which auto-detects color support in the
      # running terminal.  The log output shown in Azure DevOps job runs only has
      # basic ANSI color support though, so force that in the pipeline
      - name: FORCE_COLOR
        value: 1
      - name: testPackageDir
        value: '${{ parameters.testWorkspace }}'
      - name: skipComponentGovernanceDetection
        value: true
      - ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/test/') }}:
        - name: feed
          value: https://pkgs.dev.azure.com/fluidframework/internal/_packaging/internal/npm/registry/
      - ${{ if not(startsWith(variables['Build.SourceBranch'], 'refs/heads/test/')) }}:
        - name: feed
          value: https://pkgs.dev.azure.com/fluidframework/internal/_packaging/build/npm/registry/

      steps:
      # Setup
      - checkout: self
        clean: true
        lfs: true
        submodules: true

      # Print parameters/Vars
      - task: Bash@3
        displayName: Print Parameters and Variables
        inputs:
          targetType: 'inline'
          script: |
            # Show all task group conditions
            echo "
            Pipeline Parameters:
              poolBuild=${{ parameters.poolBuild }}
              testPackage=${{ parameters.testPackage }}
            Pipeline Variables:
              testWorkspace=${{ parameters.testWorkspace }}
              testPackageFilePattern=${{ variables.testPackageFilePattern }}
              feed=${{ variables.feed }}
              target=${{ parameters.target }}
              variant=${{ variant }}
            "
      # Install
      - task: UseNode@1
        displayName: Use Node 12.x
        inputs:
          version: 12.x

      # Install dependencies
      - task: Npm@1
        displayName: 'npm install'
        inputs:
          command: 'custom'
          workingDir: '.'
          customCommand: 'install'
          customRegistry: 'useNpmrc'

      # Build the azure-client package
      - task: Npm@1
        displayName: 'npm run build:fast azure-client'
        inputs:
          command: 'custom'
          workingDir: '.'
          customCommand: 'run build:fast azure-client'
          customRegistry: 'useNpmrc'

      # Build the tests
      - task: Npm@1
        displayName: 'npm run build:test'
        inputs:
          command: 'custom'
          workingDir: ${{ parameters.testWorkspace }}
          customCommand: 'run build:test'
          customRegistry: 'useNpmrc'

      # Run the tests
      - task: Npm@1
        displayName: '[azure-client tests] npm run test:realsvc:${{ parameters.target }} ${{ variant }}'
        continueOnError: true
        env:
          ${{ parameters.env }}
        inputs:
          command: 'custom'
          workingDir: ${{ parameters.testWorkspace }}
          customCommand: 'run test:realsvc:${{ parameters.target }} -- ${{ variant }}'

      # Upload results
      - task: PublishTestResults@2
        displayName: Publish Test Results
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/*junit-report.xml'
          searchFolder: ${{ variables.testPackageDir }}/nyc
          mergeTestResults: false
        condition: succeededOrFailed()
